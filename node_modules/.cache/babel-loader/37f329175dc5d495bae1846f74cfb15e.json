{"ast":null,"code":"import _defineProperty from \"/home/daffolap/Documents/work/project/React/rimbun.io-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/daffolap/Documents/work/project/React/rimbun.io-front/src/pages/dashboard/Dashboard.js\";\nimport React, { Component } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Row, Col, Alert, Button, ButtonGroup, Breadcrumb, BreadcrumbItem, Progress, Badge, ListGroup, ButtonDropdown, DropdownMenu, DropdownToggle, DropdownItem, Table } from 'reactstrap';\nimport { mock } from './mock';\nimport Widget from '../../components/Widget';\nimport { fetchPosts } from '../../actions/posts';\nimport s from './Dashboard.module.scss';\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      isDropdownOpened: false\n    });\n\n    _defineProperty(this, \"formatDate\", str => {\n      return str.replace(/,.*$/, \"\");\n    });\n\n    _defineProperty(this, \"toggleDropdown\", () => {\n      this.setState(prevState => ({\n        isDropdownOpened: !prevState.isDropdownOpened\n      }));\n    });\n  }\n\n  componentDidMount() {\n    if (process.env.NODE_ENV === \"development\") {\n      this.props.dispatch(fetchPosts());\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: s.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, \"YOU ARE HERE\"), /*#__PURE__*/React.createElement(BreadcrumbItem, {\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, \"Dashboard\")), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"mb-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, \"Dashboard\"));\n  }\n\n}\n\n_defineProperty(Dashboard, \"propTypes\", {\n  posts: PropTypes.any,\n  isFetching: PropTypes.bool,\n  dispatch: PropTypes.func.isRequired\n});\n\n_defineProperty(Dashboard, \"defaultProps\", {\n  posts: [],\n  isFetching: false\n});\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.posts.isFetching,\n    posts: state.posts.posts\n  };\n}\n\nexport default connect(mapStateToProps)(Dashboard);","map":{"version":3,"sources":["/home/daffolap/Documents/work/project/React/rimbun.io-front/src/pages/dashboard/Dashboard.js"],"names":["React","Component","cx","PropTypes","Link","connect","Row","Col","Alert","Button","ButtonGroup","Breadcrumb","BreadcrumbItem","Progress","Badge","ListGroup","ButtonDropdown","DropdownMenu","DropdownToggle","DropdownItem","Table","mock","Widget","fetchPosts","s","Dashboard","isDropdownOpened","str","replace","setState","prevState","componentDidMount","process","env","NODE_ENV","props","dispatch","render","root","posts","any","isFetching","bool","func","isRequired","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,GADF,EAEEC,GAFF,EAGEC,KAHF,EAIEC,MAJF,EAKEC,WALF,EAMEC,UANF,EAOEC,cAPF,EAQEC,QARF,EASEC,KATF,EAUEC,SAVF,EAWEC,cAXF,EAYEC,YAZF,EAaEC,cAbF,EAcEC,YAdF,EAeEC,KAfF,QAgBO,YAhBP;AAiBA,SAASC,IAAT,QAAqB,QAArB;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,CAAP,MAAc,yBAAd;;AAEA,MAAMC,SAAN,SAAwBxB,SAAxB,CAAkC;AAAA;AAAA;;AAAA,mCAcxB;AACNyB,MAAAA,gBAAgB,EAAE;AADZ,KAdwB;;AAAA,wCAwBlBC,GAAD,IAAS;AACpB,aAAOA,GAAG,CAACC,OAAJ,CAAY,MAAZ,EAAmB,EAAnB,CAAP;AACD,KA1B+B;;AAAA,4CA4Bf,MAAM;AACrB,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1BJ,QAAAA,gBAAgB,EAAE,CAACI,SAAS,CAACJ;AADH,OAAL,CAAvB;AAGD,KAhC+B;AAAA;;AAkBhCK,EAAAA,iBAAiB,GAAG;AAClB,QAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA5B,EAA2C;AACzC,WAAKC,KAAL,CAAWC,QAAX,CAAoBb,UAAU,EAA9B;AACD;AACF;;AAYDc,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAEb,CAAC,CAACc,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,oBAAC,cAAD;AAAgB,MAAA,MAAM,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CADF,eAKE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF,CADF;AASD;;AA5C+B;;gBAA5Bb,S,eAEe;AACjBc,EAAAA,KAAK,EAAEpC,SAAS,CAACqC,GADA;AAEjBC,EAAAA,UAAU,EAAEtC,SAAS,CAACuC,IAFL;AAGjBN,EAAAA,QAAQ,EAAEjC,SAAS,CAACwC,IAAV,CAAeC;AAHR,C;;gBAFfnB,S,kBASkB;AACpBc,EAAAA,KAAK,EAAE,EADa;AAEpBE,EAAAA,UAAU,EAAE;AAFQ,C;;AAsCxB,SAASI,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLL,IAAAA,UAAU,EAAEK,KAAK,CAACP,KAAN,CAAYE,UADnB;AAELF,IAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,CAAYA;AAFd,GAAP;AAID;;AAED,eAAelC,OAAO,CAACwC,eAAD,CAAP,CAAyBpB,SAAzB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  Row,\n  Col,\n  Alert,\n  Button,\n  ButtonGroup,\n  Breadcrumb,\n  BreadcrumbItem,\n  Progress,\n  Badge,\n  ListGroup,\n  ButtonDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Table\n} from 'reactstrap';\nimport { mock } from './mock'\n\nimport Widget from '../../components/Widget';\n\nimport { fetchPosts } from '../../actions/posts';\nimport s from './Dashboard.module.scss';\n\nclass Dashboard extends Component {\n  /* eslint-disable */\n  static propTypes = {\n    posts: PropTypes.any,\n    isFetching: PropTypes.bool,\n    dispatch: PropTypes.func.isRequired,\n  };\n  /* eslint-enable */\n\n  static defaultProps = {\n    posts: [],\n    isFetching: false,\n  };\n\n  state = {\n    isDropdownOpened: false\n  };\n\n  componentDidMount() {\n    if(process.env.NODE_ENV === \"development\") {\n      this.props.dispatch(fetchPosts());      \n    }\n  }\n\n  formatDate = (str) => {\n    return str.replace(/,.*$/,\"\");\n  }\n\n  toggleDropdown = () => {\n    this.setState(prevState => ({\n      isDropdownOpened: !prevState.isDropdownOpened,\n    }));\n  }\n\n  render() {\n    return (\n      <div className={s.root}>\n        <Breadcrumb>\n          <BreadcrumbItem>YOU ARE HERE</BreadcrumbItem>\n          <BreadcrumbItem active>Dashboard</BreadcrumbItem>\n        </Breadcrumb>\n        <h1 className=\"mb-lg\">Dashboard</h1>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.posts.isFetching,\n    posts: state.posts.posts,\n  };\n}\n\nexport default connect(mapStateToProps)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}